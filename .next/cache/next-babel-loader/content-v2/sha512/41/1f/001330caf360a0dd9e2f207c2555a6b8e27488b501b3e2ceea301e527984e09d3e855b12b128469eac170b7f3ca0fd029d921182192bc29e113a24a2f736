{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\vanth\\\\OneDrive\\\\Desktop\\\\next-cy\\\\src\\\\components\\\\Slider\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Container from \"./Container\";\nimport SliderContent from \"./SliderContent\";\nimport Slide from \"./Slide\";\nimport Arrow from \"./Arrow\";\nimport Dots from \"./Dots\";\n\nconst useIntervalWithStop = (callback, delay) => {\n  const savedCallback = useRef();\n  const intervalId = useRef(null);\n  const {\n    0: currentDelay,\n    1: setDelay\n  } = useState(delay);\n  const toggleRunning = useCallback(() => setDelay(currentDelayVar => currentDelayVar === null ? delay : null), [delay]);\n  const clear = useCallback(() => clearInterval(intervalId.current), []); // Remember the latest function.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (intervalId.current) clear();\n\n    if (currentDelay !== null) {\n      intervalId.current = setInterval(tick, currentDelay);\n    }\n\n    return clear;\n  }, [currentDelay, clear]);\n  return [toggleRunning, !!currentDelay];\n};\n\nconst Slider = ({\n  className,\n  inContainer = false,\n  slideInterval,\n  slides,\n  size = \"medium\",\n  arrowProps,\n  dotsProps,\n  slideProps,\n  sliderWrapperProps,\n  sliderProps\n}) => {\n  const {\n    0: width,\n    1: setWidth\n  } = useState(0);\n  const transitionRef = useRef();\n  const resizeRef = useRef();\n  const containerRef = useRef(null);\n  let togglePausePlay;\n  let isPlaying;\n  const firstSlide = slides[0];\n  const secondSlide = slides[1];\n  const lastSlide = slides[slides.length - 1];\n  const SIZES = {\n    small: \"h-1/3\",\n    medium: \"h-1/2\",\n    large: \"h-screen\"\n  };\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    activeSlide: 0,\n    translate: width,\n    transition: 0.45,\n    _slides: [lastSlide, firstSlide, secondSlide]\n  });\n  const {\n    activeSlide,\n    translate,\n    _slides,\n    transition\n  } = state;\n\n  const handleResize = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      translate: width,\n      transition: 0\n    }));\n  };\n\n  const smoothTransition = () => {\n    let _slidesClone = [];\n\n    if (activeSlide === slides.length - 1) {\n      _slidesClone = [slides[slides.length - 2], lastSlide, firstSlide];\n    } else if (activeSlide === 0) {\n      _slidesClone = [lastSlide, firstSlide, secondSlide];\n    } else _slidesClone = slides.slice(activeSlide - 1, activeSlide + 2);\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      _slides: _slidesClone,\n      transition: 0,\n      translate: width\n    }));\n  };\n\n  const nextSlide = () => setState(_objectSpread(_objectSpread({}, state), {}, {\n    translate: translate + width,\n    activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\n  }));\n\n  const prevSlide = () => setState(_objectSpread(_objectSpread({}, state), {}, {\n    translate: 0,\n    activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1\n  }));\n\n  if (slideInterval) {\n    const [toggle, running] = useIntervalWithStop(() => {\n      nextSlide();\n    }, slideInterval * 1000);\n    togglePausePlay = toggle;\n    isPlaying = running;\n  }\n\n  useEffect(() => {\n    setWidth(containerRef.current.clientWidth);\n    transitionRef.current = smoothTransition;\n    resizeRef.current = handleResize;\n  });\n  useEffect(() => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      translate: containerRef.current.clientWidth\n    }));\n\n    const smooth = e => {\n      if (e.target.className.includes(\"SliderContent\")) {\n        transitionRef.current();\n      }\n    };\n\n    const resize = () => {\n      resizeRef.current();\n    };\n\n    const transitionEnd = window.addEventListener(\"transitionend\", smooth);\n    const onResize = window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"transitionend\", transitionEnd);\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n  useEffect(() => {\n    if (transition === 0) setState(_objectSpread(_objectSpread({}, state), {}, {\n      transition: 0.45\n    }));\n  }, [transition]);\n  const Element = inContainer ? Container : \"div\";\n  return /*#__PURE__*/_jsxDEV(Element, _objectSpread(_objectSpread({\n    ref: containerRef,\n    className: cn(SIZES[size], \"relative w-screen overflow-hidden whitespace-no-wrap p-0 m-0\", className)\n  }, sliderProps), {}, {\n    children: [/*#__PURE__*/_jsxDEV(SliderContent, _objectSpread(_objectSpread({\n      translate: translate,\n      transition: transition,\n      width: width * _slides.length\n    }, sliderWrapperProps), {}, {\n      children: _slides.map((_slide, i) => /*#__PURE__*/_jsxDEV(Slide, _objectSpread({\n        width: width,\n        content: _slide\n      }, slideProps), _slide + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, _objectSpread({\n      direction: \"left\",\n      handleClick: prevSlide\n    }, arrowProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, _objectSpread({\n      direction: \"right\",\n      handleClick: nextSlide\n    }, arrowProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), slideInterval && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Arrow, _objectSpread({\n        direction: \"pause\",\n        playState: !isPlaying,\n        handleClick: togglePausePlay\n      }, arrowProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Arrow, _objectSpread({\n        direction: \"play\",\n        playState: isPlaying,\n        handleClick: togglePausePlay\n      }, arrowProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dots, _objectSpread({\n      slides: slides,\n      activeSlide: activeSlide\n    }, dotsProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\nSlider.propTypes = {\n  slides: PropTypes.array,\n  slideInterval: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  inContainer: PropTypes.bool,\n  arrowProps: PropTypes.object,\n  dotsProps: PropTypes.object,\n  slideProps: PropTypes.object,\n  sliderWrapperProps: PropTypes.object,\n  sliderProps: PropTypes.object\n};\nexport default Slider;","map":{"version":3,"sources":["C:/Users/vanth/OneDrive/Desktop/next-cy/src/components/Slider/index.js"],"names":["React","useState","useEffect","useRef","useCallback","cn","PropTypes","Container","SliderContent","Slide","Arrow","Dots","useIntervalWithStop","callback","delay","savedCallback","intervalId","currentDelay","setDelay","toggleRunning","currentDelayVar","clear","clearInterval","current","tick","setInterval","Slider","className","inContainer","slideInterval","slides","size","arrowProps","dotsProps","slideProps","sliderWrapperProps","sliderProps","width","setWidth","transitionRef","resizeRef","containerRef","togglePausePlay","isPlaying","firstSlide","secondSlide","lastSlide","length","SIZES","small","medium","large","state","setState","activeSlide","translate","transition","_slides","handleResize","smoothTransition","_slidesClone","slice","nextSlide","prevSlide","toggle","running","clientWidth","smooth","e","target","includes","resize","transitionEnd","window","addEventListener","onResize","removeEventListener","Element","map","_slide","i","propTypes","array","number","string","bool","object"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport cn from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Container from \"./Container\";\r\n\r\nimport SliderContent from \"./SliderContent\";\r\nimport Slide from \"./Slide\";\r\nimport Arrow from \"./Arrow\";\r\nimport Dots from \"./Dots\";\r\n\r\nconst useIntervalWithStop = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n  const intervalId = useRef(null);\r\n  const [currentDelay, setDelay] = useState(delay);\r\n\r\n  const toggleRunning = useCallback(\r\n    () =>\r\n      setDelay((currentDelayVar) => (currentDelayVar === null ? delay : null)),\r\n    [delay]\r\n  );\r\n\r\n  const clear = useCallback(() => clearInterval(intervalId.current), []);\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n\r\n    if (intervalId.current) clear();\r\n\r\n    if (currentDelay !== null) {\r\n      intervalId.current = setInterval(tick, currentDelay);\r\n    }\r\n\r\n    return clear;\r\n  }, [currentDelay, clear]);\r\n\r\n  return [toggleRunning, !!currentDelay];\r\n};\r\n\r\nconst Slider = ({\r\n  className,\r\n  inContainer = false,\r\n  slideInterval,\r\n  slides,\r\n  size = \"medium\",\r\n  arrowProps,\r\n  dotsProps,\r\n  slideProps,\r\n  sliderWrapperProps,\r\n  sliderProps\r\n}) => {\r\n  const [width, setWidth] = useState(0);\r\n  const transitionRef = useRef();\r\n  const resizeRef = useRef();\r\n  const containerRef = useRef(null);\r\n\r\n  let togglePausePlay;\r\n  let isPlaying;\r\n\r\n  const firstSlide = slides[0];\r\n  const secondSlide = slides[1];\r\n  const lastSlide = slides[slides.length - 1];\r\n  const SIZES = {\r\n    small: \"h-1/3\",\r\n    medium: \"h-1/2\",\r\n    large: \"h-screen\"\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    activeSlide: 0,\r\n    translate: width,\r\n    transition: 0.45,\r\n    _slides: [lastSlide, firstSlide, secondSlide]\r\n  });\r\n  const { activeSlide, translate, _slides, transition } = state;\r\n\r\n  const handleResize = () => {\r\n    setState({ ...state, translate: width, transition: 0 });\r\n  };\r\n\r\n  const smoothTransition = () => {\r\n    let _slidesClone = [];\r\n\r\n    if (activeSlide === slides.length - 1) {\r\n      _slidesClone = [slides[slides.length - 2], lastSlide, firstSlide];\r\n    } else if (activeSlide === 0) {\r\n      _slidesClone = [lastSlide, firstSlide, secondSlide];\r\n    } else _slidesClone = slides.slice(activeSlide - 1, activeSlide + 2);\r\n\r\n    setState({\r\n      ...state,\r\n      _slides: _slidesClone,\r\n      transition: 0,\r\n      translate: width\r\n    });\r\n  };\r\n\r\n  const nextSlide = () =>\r\n    setState({\r\n      ...state,\r\n      translate: translate + width,\r\n      activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\r\n    });\r\n\r\n  const prevSlide = () =>\r\n    setState({\r\n      ...state,\r\n      translate: 0,\r\n      activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1\r\n    });\r\n\r\n  if (slideInterval) {\r\n    const [toggle, running] = useIntervalWithStop(() => {\r\n      nextSlide();\r\n    }, slideInterval * 1000);\r\n\r\n    togglePausePlay = toggle;\r\n    isPlaying = running;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setWidth(containerRef.current.clientWidth);\r\n\r\n    transitionRef.current = smoothTransition;\r\n    resizeRef.current = handleResize;\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, translate: containerRef.current.clientWidth });\r\n    const smooth = (e) => {\r\n      if (e.target.className.includes(\"SliderContent\")) {\r\n        transitionRef.current();\r\n      }\r\n    };\r\n\r\n    const resize = () => {\r\n      resizeRef.current();\r\n    };\r\n\r\n    const transitionEnd = window.addEventListener(\"transitionend\", smooth);\r\n    const onResize = window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"transitionend\", transitionEnd);\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (transition === 0) setState({ ...state, transition: 0.45 });\r\n  }, [transition]);\r\n\r\n  const Element = inContainer ? Container : \"div\";\r\n\r\n  return (\r\n    <Element\r\n      ref={containerRef}\r\n      className={cn(\r\n        SIZES[size],\r\n        \"relative w-screen overflow-hidden whitespace-no-wrap p-0 m-0\",\r\n        className\r\n      )}\r\n      {...sliderProps}\r\n    >\r\n      <SliderContent\r\n        translate={translate}\r\n        transition={transition}\r\n        width={width * _slides.length}\r\n        {...sliderWrapperProps}\r\n      >\r\n        {_slides.map((_slide, i) => (\r\n          <Slide\r\n            width={width}\r\n            key={_slide + i}\r\n            content={_slide}\r\n            {...slideProps}\r\n          />\r\n        ))}\r\n      </SliderContent>\r\n\r\n      <Arrow direction=\"left\" handleClick={prevSlide} {...arrowProps} />\r\n      <Arrow direction=\"right\" handleClick={nextSlide} {...arrowProps} />\r\n      {slideInterval && (\r\n        <>\r\n          <Arrow\r\n            direction=\"pause\"\r\n            playState={!isPlaying}\r\n            handleClick={togglePausePlay}\r\n            {...arrowProps}\r\n          />\r\n          <Arrow\r\n            direction=\"play\"\r\n            playState={isPlaying}\r\n            handleClick={togglePausePlay}\r\n            {...arrowProps}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <Dots slides={slides} activeSlide={activeSlide} {...dotsProps} />\r\n    </Element>\r\n  );\r\n};\r\n\r\nSlider.propTypes = {\r\n  slides: PropTypes.array,\r\n  slideInterval: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  inContainer: PropTypes.bool,\r\n  arrowProps: PropTypes.object,\r\n  dotsProps: PropTypes.object,\r\n  slideProps: PropTypes.object,\r\n  sliderWrapperProps: PropTypes.object,\r\n  sliderProps: PropTypes.object\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}